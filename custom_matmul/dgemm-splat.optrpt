Intel(R) Advisor can now assist with vectorization and show optimization
  report messages with your source code.
See "https://software.intel.com/en-us/intel-advisor-xe" for details.


Begin optimization report for: dgemm(const int, const int, const int, const double, const double *, const int, const double *, const int, const double, double *__restrict__, const int)

    Report from: Vector optimizations [vec]


LOOP BEGIN at dgemm-splat.c(98,2)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at dgemm-splat.c(99,3)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at dgemm-splat.c(101,4)
         remark #15542: loop was not vectorized: inner loop was already vectorized

         LOOP BEGIN at dgemm-splat.c(106,5)
            remark #15542: loop was not vectorized: inner loop was already vectorized

            LOOP BEGIN at dgemm-splat.c(108,6)
               remark #15301: SIMD LOOP WAS VECTORIZED

               LOOP BEGIN at dgemm-splat.c(125,7)
               LOOP END
            LOOP END

            LOOP BEGIN at dgemm-splat.c(108,6)
            <Remainder loop for vectorization>
               remark #15301: REMAINDER LOOP WAS VECTORIZED
            LOOP END
         LOOP END
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: otcopy_8(int, int, const double *, int, double *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at otcopy_8.h(80,3)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at otcopy_8.h(96,7)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed ANTI dependence between *aoffset1 (98:4) and *(boffset1+504) (248:6)
   LOOP END
LOOP END

LOOP BEGIN at otcopy_8.h(438,5)
<Distributed chunk1>
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at otcopy_8.h(438,5)
<Distributed chunk2>
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between *aoffset1 (441:2) and *(boffset1+248) (515:4)
LOOP END

LOOP BEGIN at otcopy_8.h(622,5)
<Distributed chunk1>
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at otcopy_8.h(622,5)
<Distributed chunk2>
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between *aoffset1 (624:2) and *(boffset1+120) (660:4)
LOOP END

LOOP BEGIN at otcopy_8.h(727,5)
<Multiversioned v1>
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at otcopy_8.h(727,5)
<Remainder loop for vectorization, Multiversioned v1>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at otcopy_8.h(727,5)
<Remainder loop for vectorization, Multiversioned v1>
LOOP END

LOOP BEGIN at otcopy_8.h(727,5)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
LOOP END
===========================================================================
